// <auto-generated />
using System;
using KozakBank.Persistence.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KozakBank.Persistence.Migrations
{
    [DbContext(typeof(DataContext.DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KozakBank.Domain.Entities.KisaCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<DateOnly>("CreatedOnly")
                        .HasColumnType("date");

                    b.Property<Guid>("IdFromCardSystem")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("KisaCards");
                });

            modelBuilder.Entity("KozakBank.Domain.Entities.KozakInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<string>("BankIdentifier")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<float>("CommissionValue")
                        .HasColumnType("real");

                    b.Property<DateOnly>("CreatedOnly")
                        .HasColumnType("date");

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("KozakInfos");
                });

            modelBuilder.Entity("KozakBank.Domain.Entities.MapsterCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<DateOnly>("CreatedOnly")
                        .HasColumnType("date");

                    b.Property<Guid>("IdFromCardSystem")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MapsterCards");
                });

            modelBuilder.Entity("KozakBank.Domain.Entities.TransactionHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("AmountMoney")
                        .HasColumnType("real");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uuid");

                    b.Property<float>("Commission")
                        .HasColumnType("real");

                    b.Property<DateOnly>("CreatedOnly")
                        .HasColumnType("date");

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("TransactionHistories");
                });

            modelBuilder.Entity("KozakBank.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("CreatedOnly")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KozakBank.Domain.Entities.KisaCard", b =>
                {
                    b.HasOne("KozakBank.Domain.Entities.User", "User")
                        .WithMany("KisaCards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KozakBank.Domain.Entities.MapsterCard", b =>
                {
                    b.HasOne("KozakBank.Domain.Entities.User", "User")
                        .WithMany("MapsterCards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KozakBank.Domain.Entities.User", b =>
                {
                    b.Navigation("KisaCards");

                    b.Navigation("MapsterCards");
                });
#pragma warning restore 612, 618
        }
    }
}
